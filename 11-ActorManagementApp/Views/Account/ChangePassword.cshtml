@model ChangePasswordVM

@{
    ViewData["Title"] = "ChangePassword";
}

<div class="container">
    <div class="row p-3">
        <div class="col-md-4">
            @if (ViewBag.IsSuccess == true)
            {
                <div class="alert alert-success">
                    Password has been updated successfully
                </div>
            }
            <div class="my-5">
                <h2>Change Password</h2>
            </div>
            <form asp-controller="Account" asp-action="ChangePassword" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="CurrentPassword" class="form-label"></label>
                    <input asp-for="CurrentPassword" class="form-control" />
                    <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="NewPassword" class="form-label"></label>
                    <input asp-for="NewPassword" class="form-control" />
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ConfirmNewPassword" class="form-label"></label>
                    <input asp-for="ConfirmNewPassword" class="form-control" />
                    <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Change Password" class="btn btn-primary" />
                </div>
            </form>
        </div>
        <div class="col-md-8">
            <img src="~/images-identity/login.png" class="img-fluid" />
        </div>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
